package jt.projects.gbpopularlibs.ui.main

import android.content.Intent
import android.os.Bundle
import android.view.MenuItem
import android.widget.Toast
import com.github.terrakok.cicerone.NavigatorHolder
import com.github.terrakok.cicerone.androidx.AppNavigator
import com.google.android.material.dialog.MaterialAlertDialogBuilder
import io.reactivex.rxjava3.plugins.RxJavaPlugins
import jt.projects.gbpopularlibs.App
import jt.projects.gbpopularlibs.R
import jt.projects.gbpopularlibs.core.interfaces.BackButtonListener
import jt.projects.gbpopularlibs.core.utils.INetworkStatus
import jt.projects.gbpopularlibs.core.utils.NetworkStatus
import jt.projects.gbpopularlibs.databinding.ActivityMainBinding
import jt.projects.gbpopularlibs.presenter.main.MainPresenter
import jt.projects.gbpopularlibs.ui.counters_mvvm.CounterMVVMActivity
import moxy.MvpAppCompatActivity
import moxy.ktx.moxyPresenter
import javax.inject.Inject


class MainActivity : MvpAppCompatActivity(), MainView {
    private lateinit var binding: ActivityMainBinding

    @Inject
    lateinit var navHolder: NavigatorHolder
    @Inject
    lateinit var networkStatus: INetworkStatus

    private val navigator = AppNavigator(this, R.id.fragment_container)

    val presenter by moxyPresenter {
        MainPresenter(this.supportFragmentManager).apply {
            App.instance.appComponent.inject(this)
        }
    }


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.bottomNavigationView.setOnItemSelectedListener { item ->
            onOptionsItemSelected(item)
        }

        // –¥–ª—è –æ—à–∏–±–∫–∏ —Å dispose (UndeliverableException)!!
        RxJavaPlugins.setErrorHandler {
            Toast.makeText(this, "RxJavaPlugins error: ${it.message}", Toast.LENGTH_LONG).show()
        }

        App.instance.appComponent.inject(this)
        try {
            networkStatus.isOnline().subscribe() {
                // Toast.makeText(this, "Internet available: $it", Toast.LENGTH_LONG).show()
                binding.tvNetworkStatus.text = "üóùÔ∏è Internet available: $it"
            }
        }
        catch (e: java.lang.Exception){
            Toast.makeText(this, e.message,Toast.LENGTH_LONG).show()
        }
    }


    /**
     * –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –æ—Ç—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –≤ onPause –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –≤ onResumeFragments, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤
    –¥—Ä—É–≥–æ–π Activity, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–∂–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä, –≤—ã–∑–æ–≤—ã –ø–µ—Ä–µ–¥–∞–≤–∞–ª–∏—Å—å –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä—É –Ω–æ–≤–æ–≥–æ
    –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ Activity. –ù–æ–≤—ã–π –æ—Ç–∫—Ä—ã—Ç—ã–π Activity —Ç–∞–∫–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏ –æ—Ç—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –≤
    onPause –∏ —Ç. –¥.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ onResumeFragments, –∞ –Ω–µ onResume. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤ –º–æ–º–µ–Ω—Ç
    onResume –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã Activity –º–æ–≥—É—Ç –µ—â—ë –Ω–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö onResume. –ò–Ω–æ–≥–¥–∞ —ç—Ç–æ
    –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–µ—â–µ–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤, –∞ –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–æ–≥—É—Ç
    –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ IllegalStateException. –í–æ –≤—Ä–µ–º—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ onResumeFragments –≤—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —É–∂–µ
    –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
     */
    override fun onResumeFragments() {
        super.onResumeFragments()
        navHolder.setNavigator(navigator)
    }

    override fun onPause() {
        super.onPause()
        navHolder.removeNavigator()
    }

    override fun onBackPressed() {
        if (supportFragmentManager.backStackEntryCount == 0) {
            showExitDialog()
        } else {
            supportFragmentManager.fragments.forEach { f ->
                if (f is BackButtonListener && f.backPressed()) {
                    return
                }
            }
            presenter.backClicked()
        }
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        when (item.itemId) {
            R.id.bottom_view_users -> {
                presenter.showUsers()
            }
            R.id.bottom_view_counters -> {
                presenter.showCountersMvp()
            }
            R.id.bottom_view_countersVM -> {
                val myIntent = Intent(this, CounterMVVMActivity::class.java)
                startActivity(myIntent)
            }
        }
        return true
    }

    private fun showExitDialog() {
        MaterialAlertDialogBuilder(this)
            .setTitle("–í—ã—Ö–æ–¥")
            .setMessage("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?")
            .setPositiveButton(
                android.R.string.yes
            ) { _, _ -> finish() }//–∏–Ω–∞—á–µ Activity –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ "—Å–ø—è—â–∏–π —Ä–µ–∂–∏–º" –∏ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å—Ç–µ–∫–µ
            .setNegativeButton(android.R.string.no, null)
            .setIcon(R.drawable.ic_baseline_exit_to_app_24)
            .show()
    }
}